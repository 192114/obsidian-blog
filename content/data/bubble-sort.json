{"html":"<hr>\n<h3 id=\"anchor-算法步骤\">\n        <a aria-hidden=\"true\" class=\"anchor\" href=\"#anchor-算法步骤\"><span class=\"octicon octicon-link\"></span></a>\n        算法步骤\n        </h3>\n<ul>\n<li>比较相邻的两个元素如果第一个比第二个大就交换两个元素的位置  </li>\n<li>对每个相邻的元素执行同样的工作，从开始的一对到最后的一对，执行完后最大的元素将在最后一位  </li>\n<li>依次执行元素，除了后边的最大的元素  </li>\n<li>持续执行，直到没有需要比较的数字</li>\n</ul>\n<h3 id=\"anchor-图解\">\n        <a aria-hidden=\"true\" class=\"anchor\" href=\"#anchor-图解\"><span class=\"octicon octicon-link\"></span></a>\n        图解\n        </h3>\n<p><img alt=\"bubbleSort.gif\" src=\"../../static/images/bubbleSort.gif\">  </p>\n<h3 id=\"anchor-实现\">\n        <a aria-hidden=\"true\" class=\"anchor\" href=\"#anchor-实现\"><span class=\"octicon octicon-link\"></span></a>\n        实现\n        </h3>\n<h4 id=\"anchor-未优化版本\">\n        <a aria-hidden=\"true\" class=\"anchor\" href=\"#anchor-未优化版本\"><span class=\"octicon octicon-link\"></span></a>\n        未优化版本\n        </h4>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> arr = [<span class=\"hljs-number\">95</span>, <span class=\"hljs-number\">26</span>, <span class=\"hljs-number\">29</span>, <span class=\"hljs-number\">23</span>, <span class=\"hljs-number\">72</span>, <span class=\"hljs-number\">54</span>, <span class=\"hljs-number\">23</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">45</span>]  \n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">bubbleSort</span>(<span class=\"hljs-params\">list</span>) {  \n  <span class=\"hljs-keyword\">const</span> len = list.<span class=\"hljs-property\">length</span>;  \n  \n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; len; i++) {  \n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> j = <span class=\"hljs-number\">0</span>; j &lt; len - <span class=\"hljs-number\">1</span> - i; j++) {  \n      <span class=\"hljs-keyword\">if</span> (list[j] &gt; list[j + <span class=\"hljs-number\">1</span>]) {  \n        <span class=\"hljs-keyword\">const</span> temp = list[j];  \n        list[j] = list[j + <span class=\"hljs-number\">1</span>];  \n        list[j + <span class=\"hljs-number\">1</span>] = temp;  \n      }  \n    }  \n  }  \n  \n  <span class=\"hljs-keyword\">return</span> list;  \n}  \n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title function_\">bubbleSort</span>(arr)); <span class=\"hljs-comment\">// [2, 23, 23, 26, 29, 30, 45, 54, 72, 95]  </span>\n</code></pre><h4 id=\"anchor-优化版本\">\n        <a aria-hidden=\"true\" class=\"anchor\" href=\"#anchor-优化版本\"><span class=\"octicon octicon-link\"></span></a>\n        优化版本\n        </h4>\n<ol>\n<li>如果内层循环没有发生位置交换，则说明排序已经完成，就不用在继续执行了  </li>\n<li>记录内层循环最后发生位置交换的指针，可以较少内层循环的次数</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">bubbleSort</span>(<span class=\"hljs-params\">list</span>) {  \n  <span class=\"hljs-keyword\">const</span> len = list.<span class=\"hljs-property\">length</span>;  \n  <span class=\"hljs-comment\">// 内层优化 记录上一次冒泡的位置 减少内循环的次数  </span>\n  <span class=\"hljs-keyword\">let</span> lastIndex = <span class=\"hljs-number\">0</span>  \n  <span class=\"hljs-keyword\">let</span> innerEnd = len - <span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">// 初始的内循环结束  </span>\n  \n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; len; i++) {  \n  <span class=\"hljs-comment\">// 外层优化 如果没有发生冒泡 则说明排序完成  </span>\n  <span class=\"hljs-keyword\">let</span> haveBubble = <span class=\"hljs-literal\">false</span>  \n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> j = <span class=\"hljs-number\">0</span>; j &lt; innerEnd; j++) {  \n      <span class=\"hljs-keyword\">if</span> (list[j] &gt; list[j + <span class=\"hljs-number\">1</span>]) {  \n        <span class=\"hljs-keyword\">const</span> temp = list[j];  \n        list[j] = list[j + <span class=\"hljs-number\">1</span>];  \n        list[j + <span class=\"hljs-number\">1</span>] = temp;  \n        haveBubble = <span class=\"hljs-literal\">true</span> <span class=\"hljs-comment\">// 发生冒泡标识  </span>\n        lastIndex = j <span class=\"hljs-comment\">// 记录最后发生位置交换的指针  </span>\n      }  \n    }  \n  \n    <span class=\"hljs-comment\">// 如果没有发生位置交换 则结束指针是0 即 内层循环不发生  </span>\n    innerEnd = lastIndex   \n      \n    <span class=\"hljs-keyword\">if</span> (!haveBubble) {  \n      <span class=\"hljs-comment\">// 说明顺序已经正确了  </span>\n      <span class=\"hljs-keyword\">break</span>  \n    }  \n  }  \n  \n  <span class=\"hljs-keyword\">return</span> list;  \n}  \n  \n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title function_\">bubbleSort</span>(arr));  \n</code></pre>","heading":[{"text":"算法步骤","level":3,"id":"anchor-算法步骤"},{"text":"图解","level":3,"id":"anchor-图解"},{"text":"实现","level":3,"id":"anchor-实现","children":[{"text":"未优化版本","level":4,"id":"anchor-未优化版本"},{"text":"优化版本","level":4,"id":"anchor-优化版本"}]}],"tags":["算法","面试","javascript"],"date":"2024-03-25","series":"算法","title":"冒泡排序","slug":"bubble-sort","keywords":"算法","description":"冒泡排序","lastmod":"2024-03-25","share":"true"}