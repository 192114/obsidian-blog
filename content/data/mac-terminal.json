{"html":"<hr>\n<h3 id=\"anchor-安装 <a href=\">Homebrew\"&gt;安装 <a href=\"https://brew.sh/\">Homebrew</a></h3>\n<pre><code class=\"hljs language-Bash\">/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"  \n</code></pre><h3 id=\"anchor-配置zsh（使用mac terminal）\">配置zsh（使用mac terminal）</h3>\n<pre><code class=\"hljs language-Bash\"># ~/.zshenv  \n// 将homebrew写入环境变量  \neval \"$(/usr/local/bin/brew shellenv)\"  \n  \n# 快捷的cd命令 启发与z autojump  \neval \"$(zoxide init zsh --cmd cd)\"  \n  \n</code></pre><p>zsh常见配置文件  </p>\n<ol>\n<li>.zshenv 通常放环境变量 任何时候都会被加载  </li>\n<li>.zshrc 交互式终端可用</li>\n</ol>\n<p>加载顺序：<code>.zshenv </code>-&gt; <code>.zprofile</code> if login -&gt;<code> .zshrc</code> if interactive -&gt; <code>.zlogin</code> if login -&gt; <code>.zlogout</code>  </p>\n<h3 id=\"anchor-zsh插件管理 <a href=\">zinit\"&gt;zsh插件管理 <a href=\"https://github.com/zdharma-continuum/zinit#manual\">zinit</a></h3>\n<pre><code class=\"hljs language-Bash\"> brew install zinit  \n</code></pre><pre><code class=\"hljs language-Bash\"># .zshrc file  \n### Added by Zinit's installer  \n  \nsource \"/usr/local/opt/zinit/zinit.zsh\"  \n  \nautoload -Uz _zinit  \n  \n(( ${+_comps} )) &amp;&amp; _comps[zinit]=_zinit  \n  \n### End of Zinit's installer chunk  \n  \n# pure 主题  \n  \nzinit ice compile'(pure|async).zsh' pick'async.zsh' src'pure.zsh'  \n  \nzinit light sindresorhus/pure  \n  \n# 语法高亮  \n  \nzinit ice lucid wait='0' atinit='zpcompinit'  \n  \nzinit light zdharma-continuum/fast-syntax-highlighting  \n  \n...  \n</code></pre><p>zinit 语法说明  </p>\n<ul>\n<li><code>zinit light &lt;repo/plugin&gt;</code> 加载插件 不追踪插件行为  </li>\n<li><code>zinit load &lt;repo/plugin&gt;</code> 加载插件 可用unload卸载 追踪插件行为 查看报告 卸载  </li>\n<li><code>zinit snippet URL</code> 加载本地或远程文件  </li>\n<li><code>zinit self-update</code> 自更新  </li>\n<li><code>zinit update --parallel number</code>更新插件  </li>\n<li><code>zinit ice wait=\"0\"</code> 等待0s  <strong>ice</strong>选项 表示只使用一次 对下一条命令起作用 <strong>pick</strong> 正则匹配第一个符合条件的文件 <strong>src</strong> 指定source的文件 <strong>atinit</strong> 在加载插件时需要执行的命令</li>\n</ul>\n<h5 id=\"anchor-插件\">插件</h5>\n<ul>\n<li><a href=\"https://github.com/zdharma-continuum/fast-syntax-highlighting\">zdharma-continuum/fast-syntax-highlighting</a> 语法高亮  </li>\n<li><a href=\"https://github.com/zdharma-continuum/history-search-multi-word\">&nbsp;zdharma-continuum/history-search-multi-word</a> <code>ctrl+r</code> 选择输入匹配的语法  </li>\n<li><a href=\"https://github.com/zsh-users/zsh-completions\">zsh-users/zsh-completions</a> 补全 zsh 语法  </li>\n<li><a href=\"https://github.com/zsh-users/zsh-autosuggestions\">zsh-users/zsh-autosuggestions</a> 建议 提示之前的输入值  </li>\n<li><a href=\"https://github.com/eza-community/eza\">eza</a> 更好的ls 命令</li>\n</ul>\n<pre><code class=\"hljs language-Bash\">brew install eza  \n# ~/.zshrc  \n# eza 别名  \n  \n# 带图标  \n  \nalias ls=\"eza --icons\"  \n  \n# 文件详情  \n  \nalias ll=\"eza --icons --long --header\"  \n  \n# 文件详情 包含隐藏文件  \n  \nalias la=\"eza --icons --long --header --all\"  \n  \n# 显示文件详情并带git信息  \n  \nalias lg=\"eza --icons --long --header --all --git\"  \n  \n# 关闭默认ls颜色  \n  \nDISABLE_LS_COLORS=true   \n  \n</code></pre><ul>\n<li><a href=\"https://github.com/sharkdp/bat/blob/master/doc/README-zh.md\">bat</a> 类似cat 但有语法高亮</li>\n</ul>\n<pre><code class=\"hljs language-Bash\">brew install bat  \n  \n#命令  \nbat /example/z.js -r 16 #显示文件 从第16行显示  \n  \n# ~/.config/bat.conf  \n--paging=never #不分页  \n--theme=\"Solarized (dark)\" # 主题  \n  \n# `bat --list-themes`&nbsp;一份语法高亮主题的清单  \n</code></pre><ul>\n<li><a href=\"https://github.com/BurntSushi/ripgrep\">ripgrep</a> 命令行搜索工具</li>\n</ul>\n<pre><code class=\"hljs language-Bash\">brew install ripgrep  \n  \n#命令  \nrg const demo.js # 在demo.js 搜索const关键字  \nrg const\\w+ demo.js # 正则匹配内容  \n  \n# ~/.config/ripgrep.conf  \n&nbsp;#Don't let ripgrep vomit really long lines to my terminal, and show a preview.  \n--max-columns=150  \n--max-columns-preview   \n  \n# Add my 'web' type.  \n--type-add  \nweb:*.{html,css,js}*   \n  \n# Search hidden files / directories (e.g. dotfiles) by default  \n--hidden    \n  \n# Using glob patterns to include/exclude files or folders  \n--glob=!.git/*  \n  \n# or  \n--glob  \n!.git/*   \n  \n# Set the colors.  \n--colors=line:none  \n--colors=line:style:bold  \n  \n# Because who cares about case!?  \n--smart-case  \n</code></pre><h3 id=\"anchor-修改terminal主题配色\">修改terminal主题配色</h3>\n<ol>\n<li>左上角终端选偏好设置  </li>\n<li>点击描述文件  </li>\n<li><a href=\"https://github.com/lysyi3m/macos-terminal-themes\">themes</a>下载主题  </li>\n<li>导入下载的主题  </li>\n<li>点击使用主题</li>\n</ol>\n<h3 id=\"anchor-安装字体\">安装字体</h3>\n<pre><code class=\"hljs language-Bash\">brew tap homebrew/cask-fonts  \nbrew install font-hack-nerd-font  \n</code></pre><ul>\n<li>terminal 描述文件 文本处切换字体   </li>\n<li>vscode fontfamily 配置 字体 'Hack Nerd Font Mono' （terminal设置字体同理）</li>\n</ul>\n<h3 id=\"anchor-完整.zshrc\">完整.zshrc</h3>\n<pre><code class=\"hljs language-Bash\">### Added by Zinit's installer  \nsource \"/usr/local/opt/zinit/zinit.zsh\"  \nautoload -Uz _zinit  \n(( ${+_comps} )) &amp;&amp; _comps[zinit]=_zinit  \n### End of Zinit's installer chunk  \n  \n# pure 主题  \nzinit ice compile'(pure|async).zsh' pick'async.zsh' src'pure.zsh'  \nzinit light sindresorhus/pure  \n  \n# 语法高亮  \nzinit ice lucid wait='0' atinit='zpcompinit'  \nzinit light zdharma-continuum/fast-syntax-highlighting  \n  \n# 搜索历史输入  \nzinit ice lucid wait='0'  \nzinit light zdharma-continuum/history-search-multi-word  \n  \n# 补全  \nzinit ice lucid wait='0'  \nzinit light zsh-users/zsh-completions  \n  \n# 自动建议  \nzinit ice wait lucid atload'_zsh_autosuggest_start'  \nzinit light zsh-users/zsh-autosuggestions  \n  \n# 加载 OMZ 框架及部分插件  \nzinit snippet OMZ::lib/completion.zsh  \nzinit snippet OMZ::lib/history.zsh  \nzinit snippet OMZ::lib/key-bindings.zsh  \nzinit snippet OMZ::lib/theme-and-appearance.zsh  \nzinit snippet OMZ::plugins/colored-man-pages/colored-man-pages.plugin.zsh  \nzinit snippet OMZ::plugins/sudo/sudo.plugin.zsh  \nzinit snippet OMZ::plugins/extract  \n    \nzinit ice lucid wait='1'  \nzinit snippet OMZ::plugins/git/git.plugin.zsh  \n  \n# alias 代理命令  \nalias proxy=\"export http_proxy=http://127.0.0.1:1087;export https_proxy=http://127.0.0.1:1087;export ALL_PROXY=socks5://127.0.0.1:1080\"  \nalias unproxy=\"unset https_proxy http_proxy all_proxy\"  \n  \n# eza 别名  \n# 带图标  \nalias ls=\"eza --icons\"  \n# 文件详情  \nalias ll=\"eza --icons --long --header\"  \n# 文件详情 包含隐藏文件  \nalias la=\"eza --icons --long --header --all\"  \n# 显示文件详情并带git信息  \nalias lg=\"eza --icons --long --header --all --git\"  \n# 关闭默认ls颜色  \nDISABLE_LS_COLORS=true  \n    \n# 快捷清屏  \nalias cls=clear  \n  \n# volta 环境变量  \nexport VOLTA_HOME=\"$HOME/.volta\"  \nexport PATH=\"$VOLTA_HOME/bin:$PATH\"  \n  \n# bat 配置文件路径  \nexport BAT_CONFIG_PATH=\"$HOME/.config/bat.conf\"  \n  \n# ripgrep 配置文件路径  \nexport RIPGREP_CONFIG_PATH=\"$HOME/.config/ripgrep.conf\"  \n</code></pre>","heading":[{"text":"安装 <a href=\"https://brew.sh/\">Homebrew</a>","level":3,"id":"anchor-安装 <a href=\"https://brew.sh/\">Homebrew</a>"},{"text":"配置zsh（使用mac terminal）","level":3,"id":"anchor-配置zsh（使用mac terminal）"},{"text":"zsh插件管理 <a href=\"https://github.com/zdharma-continuum/zinit#manual\">zinit</a>","level":3,"id":"anchor-zsh插件管理 <a href=\"https://github.com/zdharma-continuum/zinit#manual\">zinit</a>"},{"text":"插件","level":5,"id":"anchor-插件"},{"text":"修改terminal主题配色","level":3,"id":"anchor-修改terminal主题配色"},{"text":"安装字体","level":3,"id":"anchor-安装字体"},{"text":"完整.zshrc","level":3,"id":"anchor-完整.zshrc"}],"tags":["computer"],"date":"2023-12-16","series":"Mac装机","title":"装机指南 - Terminal zsh 配置","slug":"mac-terminal","keywords":"mac装机","description":"mac装机，terminal，zsh，volta","lastmod":"","share":"true"}