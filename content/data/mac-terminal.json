{"html":"<hr>\n<h3 id=\"anchor-安装Homebrew\">\n        <a aria-hidden=\"true\" class=\"anchor\" href=\"#anchor-安装Homebrew\"><span class=\"octicon octicon-link\"></span></a>\n        安装Homebrew\n        </h3>\n<p>官网地址<a href=\"https://brew.sh/\">Homebrew</a>  </p>\n<pre><code class=\"hljs language-Bash\">/bin/bash -c <span class=\"hljs-string\">\"<span class=\"hljs-subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>\"</span>  \n</code></pre><h3 id=\"anchor-配置zsh（使用mac terminal）\">\n        <a aria-hidden=\"true\" class=\"anchor\" href=\"#anchor-配置zsh（使用mac terminal）\"><span class=\"octicon octicon-link\"></span></a>\n        配置zsh（使用mac terminal）\n        </h3>\n<pre><code class=\"hljs language-Bash\"><span class=\"hljs-comment\"># ~/.zshenv  </span>\n// 将homebrew写入环境变量  \n<span class=\"hljs-built_in\">eval</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">$(/usr/local/bin/brew shellenv)</span>\"</span>  \n  \n<span class=\"hljs-comment\"># 快捷的cd命令 启发与z autojump  </span>\n<span class=\"hljs-built_in\">eval</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">$(zoxide init zsh --cmd cd)</span>\"</span>  \n  \n</code></pre><p>zsh常见配置文件  </p>\n<ol>\n<li>.zshenv 通常放环境变量 任何时候都会被加载  </li>\n<li>.zshrc 交互式终端可用</li>\n</ol>\n<p>加载顺序：<code>.zshenv </code>-&gt; <code>.zprofile</code> if login -&gt;<code> .zshrc</code> if interactive -&gt; <code>.zlogin</code> if login -&gt; <code>.zlogout</code>  </p>\n<h3 id=\"anchor-zsh插件管理\">\n        <a aria-hidden=\"true\" class=\"anchor\" href=\"#anchor-zsh插件管理\"><span class=\"octicon octicon-link\"></span></a>\n        zsh插件管理\n        </h3>\n<p>文档地址<a href=\"https://github.com/zdharma-continuum/zinit#manual\">zinit</a>   </p>\n<pre><code class=\"hljs language-Bash\"> brew install zinit  \n</code></pre><pre><code class=\"hljs language-Bash\"><span class=\"hljs-comment\"># .zshrc file  </span>\n<span class=\"hljs-comment\">### Added by Zinit's installer  </span>\n  \n<span class=\"hljs-built_in\">source</span> <span class=\"hljs-string\">\"/usr/local/opt/zinit/zinit.zsh\"</span>  \n  \n<span class=\"hljs-built_in\">autoload</span> -Uz _zinit  \n  \n(( <span class=\"hljs-variable\">${+_comps}</span> )) &amp;&amp; _comps[zinit]=_zinit  \n  \n<span class=\"hljs-comment\">### End of Zinit's installer chunk  </span>\n  \n<span class=\"hljs-comment\"># pure 主题  </span>\n  \nzinit ice compile<span class=\"hljs-string\">'(pure|async).zsh'</span> pick<span class=\"hljs-string\">'async.zsh'</span> src<span class=\"hljs-string\">'pure.zsh'</span>  \n  \nzinit light sindresorhus/pure  \n  \n<span class=\"hljs-comment\"># 语法高亮  </span>\n  \nzinit ice lucid <span class=\"hljs-built_in\">wait</span>=<span class=\"hljs-string\">'0'</span> atinit=<span class=\"hljs-string\">'zpcompinit'</span>  \n  \nzinit light zdharma-continuum/fast-syntax-highlighting  \n  \n...  \n</code></pre><p>zinit 语法说明  </p>\n<ul>\n<li><code>zinit light &lt;repo/plugin&gt;</code> 加载插件 不追踪插件行为  </li>\n<li><code>zinit load &lt;repo/plugin&gt;</code> 加载插件 可用unload卸载 追踪插件行为 查看报告 卸载  </li>\n<li><code>zinit snippet URL</code> 加载本地或远程文件  </li>\n<li><code>zinit self-update</code> 自更新  </li>\n<li><code>zinit update --parallel number</code>更新插件  </li>\n<li><code>zinit ice wait=\"0\"</code> 等待0s  <strong>ice</strong>选项 表示只使用一次 对下一条命令起作用 <strong>pick</strong> 正则匹配第一个符合条件的文件 <strong>src</strong> 指定source的文件 <strong>atinit</strong> 在加载插件时需要执行的命令</li>\n</ul>\n<h5 id=\"anchor-插件\">\n        <a aria-hidden=\"true\" class=\"anchor\" href=\"#anchor-插件\"><span class=\"octicon octicon-link\"></span></a>\n        插件\n        </h5>\n<ul>\n<li><a href=\"https://github.com/zdharma-continuum/fast-syntax-highlighting\">zdharma-continuum/fast-syntax-highlighting</a> 语法高亮  </li>\n<li><a href=\"https://github.com/zdharma-continuum/history-search-multi-word\">&nbsp;zdharma-continuum/history-search-multi-word</a> <code>ctrl+r</code> 选择输入匹配的语法  </li>\n<li><a href=\"https://github.com/zsh-users/zsh-completions\">zsh-users/zsh-completions</a> 补全 zsh 语法  </li>\n<li><a href=\"https://github.com/zsh-users/zsh-autosuggestions\">zsh-users/zsh-autosuggestions</a> 建议 提示之前的输入值  </li>\n<li><a href=\"https://github.com/eza-community/eza\">eza</a> 更好的ls 命令</li>\n</ul>\n<pre><code class=\"hljs language-Bash\">brew install eza  \n<span class=\"hljs-comment\"># ~/.zshrc  </span>\n<span class=\"hljs-comment\"># eza 别名  </span>\n  \n<span class=\"hljs-comment\"># 带图标  </span>\n  \n<span class=\"hljs-built_in\">alias</span> <span class=\"hljs-built_in\">ls</span>=<span class=\"hljs-string\">\"eza --icons\"</span>  \n  \n<span class=\"hljs-comment\"># 文件详情  </span>\n  \n<span class=\"hljs-built_in\">alias</span> ll=<span class=\"hljs-string\">\"eza --icons --long --header\"</span>  \n  \n<span class=\"hljs-comment\"># 文件详情 包含隐藏文件  </span>\n  \n<span class=\"hljs-built_in\">alias</span> la=<span class=\"hljs-string\">\"eza --icons --long --header --all\"</span>  \n  \n<span class=\"hljs-comment\"># 显示文件详情并带git信息  </span>\n  \n<span class=\"hljs-built_in\">alias</span> lg=<span class=\"hljs-string\">\"eza --icons --long --header --all --git\"</span>  \n  \n<span class=\"hljs-comment\"># 关闭默认ls颜色  </span>\n  \nDISABLE_LS_COLORS=<span class=\"hljs-literal\">true</span>   \n  \n</code></pre><ul>\n<li><a href=\"https://github.com/sharkdp/bat/blob/master/doc/README-zh.md\">bat</a> 类似cat 但有语法高亮</li>\n</ul>\n<pre><code class=\"hljs language-Bash\">brew install bat  \n  \n<span class=\"hljs-comment\">#命令  </span>\nbat /example/z.js -r 16 <span class=\"hljs-comment\">#显示文件 从第16行显示  </span>\n  \n<span class=\"hljs-comment\"># ~/.config/bat.conf  </span>\n--paging=never <span class=\"hljs-comment\">#不分页  </span>\n--theme=<span class=\"hljs-string\">\"Solarized (dark)\"</span> <span class=\"hljs-comment\"># 主题  </span>\n  \n<span class=\"hljs-comment\"># `bat --list-themes`&nbsp;一份语法高亮主题的清单  </span>\n</code></pre><ul>\n<li><a href=\"https://github.com/BurntSushi/ripgrep\">ripgrep</a> 命令行搜索工具</li>\n</ul>\n<pre><code class=\"hljs language-Bash\">brew install ripgrep  \n  \n<span class=\"hljs-comment\">#命令  </span>\nrg const demo.js <span class=\"hljs-comment\"># 在demo.js 搜索const关键字  </span>\nrg const\\w+ demo.js <span class=\"hljs-comment\"># 正则匹配内容  </span>\n  \n<span class=\"hljs-comment\"># ~/.config/ripgrep.conf  </span>\n&nbsp;<span class=\"hljs-comment\">#Don't let ripgrep vomit really long lines to my terminal, and show a preview.  </span>\n--max-columns=150  \n--max-columns-preview   \n  \n<span class=\"hljs-comment\"># Add my 'web' type.  </span>\n--type-add  \nweb:*.{html,css,js}*   \n  \n<span class=\"hljs-comment\"># Search hidden files / directories (e.g. dotfiles) by default  </span>\n--hidden    \n  \n<span class=\"hljs-comment\"># Using glob patterns to include/exclude files or folders  </span>\n--glob=!.git/*  \n  \n<span class=\"hljs-comment\"># or  </span>\n--glob  \n!.git/*   \n  \n<span class=\"hljs-comment\"># Set the colors.  </span>\n--colors=line:none  \n--colors=line:style:bold  \n  \n<span class=\"hljs-comment\"># Because who cares about case!?  </span>\n--smart-case  \n</code></pre><h3 id=\"anchor-修改terminal主题配色\">\n        <a aria-hidden=\"true\" class=\"anchor\" href=\"#anchor-修改terminal主题配色\"><span class=\"octicon octicon-link\"></span></a>\n        修改terminal主题配色\n        </h3>\n<ol>\n<li>左上角终端选偏好设置  </li>\n<li>点击描述文件  </li>\n<li><a href=\"https://github.com/lysyi3m/macos-terminal-themes\">themes</a>下载主题  </li>\n<li>导入下载的主题  </li>\n<li>点击使用主题</li>\n</ol>\n<h3 id=\"anchor-安装字体\">\n        <a aria-hidden=\"true\" class=\"anchor\" href=\"#anchor-安装字体\"><span class=\"octicon octicon-link\"></span></a>\n        安装字体\n        </h3>\n<pre><code class=\"hljs language-Bash\">brew tap homebrew/cask-fonts  \nbrew install font-hack-nerd-font  \n</code></pre><ul>\n<li>terminal 描述文件 文本处切换字体   </li>\n<li>vscode fontfamily 配置 字体 'Hack Nerd Font Mono' （terminal设置字体同理）</li>\n</ul>\n<h3 id=\"anchor-完整.zshrc\">\n        <a aria-hidden=\"true\" class=\"anchor\" href=\"#anchor-完整.zshrc\"><span class=\"octicon octicon-link\"></span></a>\n        完整.zshrc\n        </h3>\n<pre><code class=\"hljs language-Bash\"><span class=\"hljs-comment\">### Added by Zinit's installer  </span>\n<span class=\"hljs-built_in\">source</span> <span class=\"hljs-string\">\"/usr/local/opt/zinit/zinit.zsh\"</span>  \n<span class=\"hljs-built_in\">autoload</span> -Uz _zinit  \n(( <span class=\"hljs-variable\">${+_comps}</span> )) &amp;&amp; _comps[zinit]=_zinit  \n<span class=\"hljs-comment\">### End of Zinit's installer chunk  </span>\n  \n<span class=\"hljs-comment\"># pure 主题  </span>\nzinit ice compile<span class=\"hljs-string\">'(pure|async).zsh'</span> pick<span class=\"hljs-string\">'async.zsh'</span> src<span class=\"hljs-string\">'pure.zsh'</span>  \nzinit light sindresorhus/pure  \n  \n<span class=\"hljs-comment\"># 语法高亮  </span>\nzinit ice lucid <span class=\"hljs-built_in\">wait</span>=<span class=\"hljs-string\">'0'</span> atinit=<span class=\"hljs-string\">'zpcompinit'</span>  \nzinit light zdharma-continuum/fast-syntax-highlighting  \n  \n<span class=\"hljs-comment\"># 搜索历史输入  </span>\nzinit ice lucid <span class=\"hljs-built_in\">wait</span>=<span class=\"hljs-string\">'0'</span>  \nzinit light zdharma-continuum/history-search-multi-word  \n  \n<span class=\"hljs-comment\"># 补全  </span>\nzinit ice lucid <span class=\"hljs-built_in\">wait</span>=<span class=\"hljs-string\">'0'</span>  \nzinit light zsh-users/zsh-completions  \n  \n<span class=\"hljs-comment\"># 自动建议  </span>\nzinit ice <span class=\"hljs-built_in\">wait</span> lucid atload<span class=\"hljs-string\">'_zsh_autosuggest_start'</span>  \nzinit light zsh-users/zsh-autosuggestions  \n  \n<span class=\"hljs-comment\"># 加载 OMZ 框架及部分插件  </span>\nzinit snippet OMZ::lib/completion.zsh  \nzinit snippet OMZ::lib/history.zsh  \nzinit snippet OMZ::lib/key-bindings.zsh  \nzinit snippet OMZ::lib/theme-and-appearance.zsh  \nzinit snippet OMZ::plugins/colored-man-pages/colored-man-pages.plugin.zsh  \nzinit snippet OMZ::plugins/sudo/sudo.plugin.zsh  \nzinit snippet OMZ::plugins/extract  \n    \nzinit ice lucid <span class=\"hljs-built_in\">wait</span>=<span class=\"hljs-string\">'1'</span>  \nzinit snippet OMZ::plugins/git/git.plugin.zsh  \n  \n<span class=\"hljs-comment\"># alias 代理命令  </span>\n<span class=\"hljs-built_in\">alias</span> proxy=<span class=\"hljs-string\">\"export http_proxy=http://127.0.0.1:1087;export https_proxy=http://127.0.0.1:1087;export ALL_PROXY=socks5://127.0.0.1:1080\"</span>  \n<span class=\"hljs-built_in\">alias</span> unproxy=<span class=\"hljs-string\">\"unset https_proxy http_proxy all_proxy\"</span>  \n  \n<span class=\"hljs-comment\"># eza 别名  </span>\n<span class=\"hljs-comment\"># 带图标  </span>\n<span class=\"hljs-built_in\">alias</span> <span class=\"hljs-built_in\">ls</span>=<span class=\"hljs-string\">\"eza --icons\"</span>  \n<span class=\"hljs-comment\"># 文件详情  </span>\n<span class=\"hljs-built_in\">alias</span> ll=<span class=\"hljs-string\">\"eza --icons --long --header\"</span>  \n<span class=\"hljs-comment\"># 文件详情 包含隐藏文件  </span>\n<span class=\"hljs-built_in\">alias</span> la=<span class=\"hljs-string\">\"eza --icons --long --header --all\"</span>  \n<span class=\"hljs-comment\"># 显示文件详情并带git信息  </span>\n<span class=\"hljs-built_in\">alias</span> lg=<span class=\"hljs-string\">\"eza --icons --long --header --all --git\"</span>  \n<span class=\"hljs-comment\"># 关闭默认ls颜色  </span>\nDISABLE_LS_COLORS=<span class=\"hljs-literal\">true</span>  \n    \n<span class=\"hljs-comment\"># 快捷清屏  </span>\n<span class=\"hljs-built_in\">alias</span> cls=clear  \n  \n<span class=\"hljs-comment\"># volta 环境变量  </span>\n<span class=\"hljs-built_in\">export</span> VOLTA_HOME=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">$HOME</span>/.volta\"</span>  \n<span class=\"hljs-built_in\">export</span> PATH=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">$VOLTA_HOME</span>/bin:<span class=\"hljs-variable\">$PATH</span>\"</span>  \n  \n<span class=\"hljs-comment\"># bat 配置文件路径  </span>\n<span class=\"hljs-built_in\">export</span> BAT_CONFIG_PATH=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">$HOME</span>/.config/bat.conf\"</span>  \n  \n<span class=\"hljs-comment\"># ripgrep 配置文件路径  </span>\n<span class=\"hljs-built_in\">export</span> RIPGREP_CONFIG_PATH=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">$HOME</span>/.config/ripgrep.conf\"</span>  \n</code></pre>","heading":[{"text":"安装Homebrew","level":3,"id":"anchor-安装Homebrew"},{"text":"配置zsh（使用mac terminal）","level":3,"id":"anchor-配置zsh（使用mac terminal）"},{"text":"zsh插件管理","level":3,"id":"anchor-zsh插件管理","children":[{"text":"插件","level":5,"id":"anchor-插件"}]},{"text":"修改terminal主题配色","level":3,"id":"anchor-修改terminal主题配色"},{"text":"安装字体","level":3,"id":"anchor-安装字体"},{"text":"完整.zshrc","level":3,"id":"anchor-完整.zshrc"}],"tags":["computer"],"date":"2023-12-16","series":"Mac装机","title":"装机指南 - Terminal zsh 配置","slug":"mac-terminal","keywords":"mac装机","description":"mac装机，terminal，zsh，volta","lastmod":"2024-03-05","share":"true"}