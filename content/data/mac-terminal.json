{"html":"<hr>\n<h3 id=\"anchor-安装 <a href=\">Homebrew\"&gt;\n        <a href=\"#anchor-安装 <a href=\">Homebrew</a>\" class=\"anchor\" aria-hidden=\"true\"&gt;<span class=\"octicon octicon-link\"></span>\n        安装 <a href=\"https://brew.sh/\">Homebrew</a>\n        </h3>\n<pre><code class=\"hljs language-Bash\">/bin/bash -c <span class=\"hljs-string\">\"<span class=\"hljs-subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>\"</span>  \n</code></pre><h3 id=\"anchor-配置zsh（使用mac terminal）\">\n        <a aria-hidden=\"true\" class=\"anchor\" href=\"#anchor-配置zsh（使用mac terminal）\"><span class=\"octicon octicon-link\"></span></a>\n        配置zsh（使用mac terminal）\n        </h3>\n<pre><code class=\"hljs language-Bash\"><span class=\"hljs-comment\"># ~/.zshenv  </span>\n// 将homebrew写入环境变量  \n<span class=\"hljs-built_in\">eval</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">$(/usr/local/bin/brew shellenv)</span>\"</span>  \n  \n<span class=\"hljs-comment\"># 快捷的cd命令 启发与z autojump  </span>\n<span class=\"hljs-built_in\">eval</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">$(zoxide init zsh --cmd cd)</span>\"</span>  \n  \n</code></pre><p>zsh常见配置文件  </p>\n<ol>\n<li>.zshenv 通常放环境变量 任何时候都会被加载  </li>\n<li>.zshrc 交互式终端可用</li>\n</ol>\n<p>加载顺序：<code>.zshenv </code>-&gt; <code>.zprofile</code> if login -&gt;<code> .zshrc</code> if interactive -&gt; <code>.zlogin</code> if login -&gt; <code>.zlogout</code>  </p>\n<h3 id=\"anchor-zsh插件管理 <a href=\">zinit\"&gt;\n        <a href=\"#anchor-zsh插件管理 <a href=\">zinit</a>\" class=\"anchor\" aria-hidden=\"true\"&gt;<span class=\"octicon octicon-link\"></span>\n        zsh插件管理 <a href=\"https://github.com/zdharma-continuum/zinit#manual\">zinit</a>\n        </h3>\n<pre><code class=\"hljs language-Bash\"> brew install zinit  \n</code></pre><pre><code class=\"hljs language-Bash\"><span class=\"hljs-comment\"># .zshrc file  </span>\n<span class=\"hljs-comment\">### Added by Zinit's installer  </span>\n  \n<span class=\"hljs-built_in\">source</span> <span class=\"hljs-string\">\"/usr/local/opt/zinit/zinit.zsh\"</span>  \n  \n<span class=\"hljs-built_in\">autoload</span> -Uz _zinit  \n  \n(( <span class=\"hljs-variable\">${+_comps}</span> )) &amp;&amp; _comps[zinit]=_zinit  \n  \n<span class=\"hljs-comment\">### End of Zinit's installer chunk  </span>\n  \n<span class=\"hljs-comment\"># pure 主题  </span>\n  \nzinit ice compile<span class=\"hljs-string\">'(pure|async).zsh'</span> pick<span class=\"hljs-string\">'async.zsh'</span> src<span class=\"hljs-string\">'pure.zsh'</span>  \n  \nzinit light sindresorhus/pure  \n  \n<span class=\"hljs-comment\"># 语法高亮  </span>\n  \nzinit ice lucid <span class=\"hljs-built_in\">wait</span>=<span class=\"hljs-string\">'0'</span> atinit=<span class=\"hljs-string\">'zpcompinit'</span>  \n  \nzinit light zdharma-continuum/fast-syntax-highlighting  \n  \n...  \n</code></pre><p>zinit 语法说明  </p>\n<ul>\n<li><code>zinit light &lt;repo/plugin&gt;</code> 加载插件 不追踪插件行为  </li>\n<li><code>zinit load &lt;repo/plugin&gt;</code> 加载插件 可用unload卸载 追踪插件行为 查看报告 卸载  </li>\n<li><code>zinit snippet URL</code> 加载本地或远程文件  </li>\n<li><code>zinit self-update</code> 自更新  </li>\n<li><code>zinit update --parallel number</code>更新插件  </li>\n<li><code>zinit ice wait=\"0\"</code> 等待0s  <strong>ice</strong>选项 表示只使用一次 对下一条命令起作用 <strong>pick</strong> 正则匹配第一个符合条件的文件 <strong>src</strong> 指定source的文件 <strong>atinit</strong> 在加载插件时需要执行的命令</li>\n</ul>\n<h5 id=\"anchor-插件\">\n        <a aria-hidden=\"true\" class=\"anchor\" href=\"#anchor-插件\"><span class=\"octicon octicon-link\"></span></a>\n        插件\n        </h5>\n<ul>\n<li><a href=\"https://github.com/zdharma-continuum/fast-syntax-highlighting\">zdharma-continuum/fast-syntax-highlighting</a> 语法高亮  </li>\n<li><a href=\"https://github.com/zdharma-continuum/history-search-multi-word\">&nbsp;zdharma-continuum/history-search-multi-word</a> <code>ctrl+r</code> 选择输入匹配的语法  </li>\n<li><a href=\"https://github.com/zsh-users/zsh-completions\">zsh-users/zsh-completions</a> 补全 zsh 语法  </li>\n<li><a href=\"https://github.com/zsh-users/zsh-autosuggestions\">zsh-users/zsh-autosuggestions</a> 建议 提示之前的输入值  </li>\n<li><a href=\"https://github.com/eza-community/eza\">eza</a> 更好的ls 命令</li>\n</ul>\n<pre><code class=\"hljs language-Bash\">brew install eza  \n<span class=\"hljs-comment\"># ~/.zshrc  </span>\n<span class=\"hljs-comment\"># eza 别名  </span>\n  \n<span class=\"hljs-comment\"># 带图标  </span>\n  \n<span class=\"hljs-built_in\">alias</span> <span class=\"hljs-built_in\">ls</span>=<span class=\"hljs-string\">\"eza --icons\"</span>  \n  \n<span class=\"hljs-comment\"># 文件详情  </span>\n  \n<span class=\"hljs-built_in\">alias</span> ll=<span class=\"hljs-string\">\"eza --icons --long --header\"</span>  \n  \n<span class=\"hljs-comment\"># 文件详情 包含隐藏文件  </span>\n  \n<span class=\"hljs-built_in\">alias</span> la=<span class=\"hljs-string\">\"eza --icons --long --header --all\"</span>  \n  \n<span class=\"hljs-comment\"># 显示文件详情并带git信息  </span>\n  \n<span class=\"hljs-built_in\">alias</span> lg=<span class=\"hljs-string\">\"eza --icons --long --header --all --git\"</span>  \n  \n<span class=\"hljs-comment\"># 关闭默认ls颜色  </span>\n  \nDISABLE_LS_COLORS=<span class=\"hljs-literal\">true</span>   \n  \n</code></pre><ul>\n<li><a href=\"https://github.com/sharkdp/bat/blob/master/doc/README-zh.md\">bat</a> 类似cat 但有语法高亮</li>\n</ul>\n<pre><code class=\"hljs language-Bash\">brew install bat  \n  \n<span class=\"hljs-comment\">#命令  </span>\nbat /example/z.js -r 16 <span class=\"hljs-comment\">#显示文件 从第16行显示  </span>\n  \n<span class=\"hljs-comment\"># ~/.config/bat.conf  </span>\n--paging=never <span class=\"hljs-comment\">#不分页  </span>\n--theme=<span class=\"hljs-string\">\"Solarized (dark)\"</span> <span class=\"hljs-comment\"># 主题  </span>\n  \n<span class=\"hljs-comment\"># `bat --list-themes`&nbsp;一份语法高亮主题的清单  </span>\n</code></pre><ul>\n<li><a href=\"https://github.com/BurntSushi/ripgrep\">ripgrep</a> 命令行搜索工具</li>\n</ul>\n<pre><code class=\"hljs language-Bash\">brew install ripgrep  \n  \n<span class=\"hljs-comment\">#命令  </span>\nrg const demo.js <span class=\"hljs-comment\"># 在demo.js 搜索const关键字  </span>\nrg const\\w+ demo.js <span class=\"hljs-comment\"># 正则匹配内容  </span>\n  \n<span class=\"hljs-comment\"># ~/.config/ripgrep.conf  </span>\n&nbsp;<span class=\"hljs-comment\">#Don't let ripgrep vomit really long lines to my terminal, and show a preview.  </span>\n--max-columns=150  \n--max-columns-preview   \n  \n<span class=\"hljs-comment\"># Add my 'web' type.  </span>\n--type-add  \nweb:*.{html,css,js}*   \n  \n<span class=\"hljs-comment\"># Search hidden files / directories (e.g. dotfiles) by default  </span>\n--hidden    \n  \n<span class=\"hljs-comment\"># Using glob patterns to include/exclude files or folders  </span>\n--glob=!.git/*  \n  \n<span class=\"hljs-comment\"># or  </span>\n--glob  \n!.git/*   \n  \n<span class=\"hljs-comment\"># Set the colors.  </span>\n--colors=line:none  \n--colors=line:style:bold  \n  \n<span class=\"hljs-comment\"># Because who cares about case!?  </span>\n--smart-case  \n</code></pre><h3 id=\"anchor-修改terminal主题配色\">\n        <a aria-hidden=\"true\" class=\"anchor\" href=\"#anchor-修改terminal主题配色\"><span class=\"octicon octicon-link\"></span></a>\n        修改terminal主题配色\n        </h3>\n<ol>\n<li>左上角终端选偏好设置  </li>\n<li>点击描述文件  </li>\n<li><a href=\"https://github.com/lysyi3m/macos-terminal-themes\">themes</a>下载主题  </li>\n<li>导入下载的主题  </li>\n<li>点击使用主题</li>\n</ol>\n<h3 id=\"anchor-安装字体\">\n        <a aria-hidden=\"true\" class=\"anchor\" href=\"#anchor-安装字体\"><span class=\"octicon octicon-link\"></span></a>\n        安装字体\n        </h3>\n<pre><code class=\"hljs language-Bash\">brew tap homebrew/cask-fonts  \nbrew install font-hack-nerd-font  \n</code></pre><ul>\n<li>terminal 描述文件 文本处切换字体   </li>\n<li>vscode fontfamily 配置 字体 'Hack Nerd Font Mono' （terminal设置字体同理）</li>\n</ul>\n<h3 id=\"anchor-完整.zshrc\">\n        <a aria-hidden=\"true\" class=\"anchor\" href=\"#anchor-完整.zshrc\"><span class=\"octicon octicon-link\"></span></a>\n        完整.zshrc\n        </h3>\n<pre><code class=\"hljs language-Bash\"><span class=\"hljs-comment\">### Added by Zinit's installer  </span>\n<span class=\"hljs-built_in\">source</span> <span class=\"hljs-string\">\"/usr/local/opt/zinit/zinit.zsh\"</span>  \n<span class=\"hljs-built_in\">autoload</span> -Uz _zinit  \n(( <span class=\"hljs-variable\">${+_comps}</span> )) &amp;&amp; _comps[zinit]=_zinit  \n<span class=\"hljs-comment\">### End of Zinit's installer chunk  </span>\n  \n<span class=\"hljs-comment\"># pure 主题  </span>\nzinit ice compile<span class=\"hljs-string\">'(pure|async).zsh'</span> pick<span class=\"hljs-string\">'async.zsh'</span> src<span class=\"hljs-string\">'pure.zsh'</span>  \nzinit light sindresorhus/pure  \n  \n<span class=\"hljs-comment\"># 语法高亮  </span>\nzinit ice lucid <span class=\"hljs-built_in\">wait</span>=<span class=\"hljs-string\">'0'</span> atinit=<span class=\"hljs-string\">'zpcompinit'</span>  \nzinit light zdharma-continuum/fast-syntax-highlighting  \n  \n<span class=\"hljs-comment\"># 搜索历史输入  </span>\nzinit ice lucid <span class=\"hljs-built_in\">wait</span>=<span class=\"hljs-string\">'0'</span>  \nzinit light zdharma-continuum/history-search-multi-word  \n  \n<span class=\"hljs-comment\"># 补全  </span>\nzinit ice lucid <span class=\"hljs-built_in\">wait</span>=<span class=\"hljs-string\">'0'</span>  \nzinit light zsh-users/zsh-completions  \n  \n<span class=\"hljs-comment\"># 自动建议  </span>\nzinit ice <span class=\"hljs-built_in\">wait</span> lucid atload<span class=\"hljs-string\">'_zsh_autosuggest_start'</span>  \nzinit light zsh-users/zsh-autosuggestions  \n  \n<span class=\"hljs-comment\"># 加载 OMZ 框架及部分插件  </span>\nzinit snippet OMZ::lib/completion.zsh  \nzinit snippet OMZ::lib/history.zsh  \nzinit snippet OMZ::lib/key-bindings.zsh  \nzinit snippet OMZ::lib/theme-and-appearance.zsh  \nzinit snippet OMZ::plugins/colored-man-pages/colored-man-pages.plugin.zsh  \nzinit snippet OMZ::plugins/sudo/sudo.plugin.zsh  \nzinit snippet OMZ::plugins/extract  \n    \nzinit ice lucid <span class=\"hljs-built_in\">wait</span>=<span class=\"hljs-string\">'1'</span>  \nzinit snippet OMZ::plugins/git/git.plugin.zsh  \n  \n<span class=\"hljs-comment\"># alias 代理命令  </span>\n<span class=\"hljs-built_in\">alias</span> proxy=<span class=\"hljs-string\">\"export http_proxy=http://127.0.0.1:1087;export https_proxy=http://127.0.0.1:1087;export ALL_PROXY=socks5://127.0.0.1:1080\"</span>  \n<span class=\"hljs-built_in\">alias</span> unproxy=<span class=\"hljs-string\">\"unset https_proxy http_proxy all_proxy\"</span>  \n  \n<span class=\"hljs-comment\"># eza 别名  </span>\n<span class=\"hljs-comment\"># 带图标  </span>\n<span class=\"hljs-built_in\">alias</span> <span class=\"hljs-built_in\">ls</span>=<span class=\"hljs-string\">\"eza --icons\"</span>  \n<span class=\"hljs-comment\"># 文件详情  </span>\n<span class=\"hljs-built_in\">alias</span> ll=<span class=\"hljs-string\">\"eza --icons --long --header\"</span>  \n<span class=\"hljs-comment\"># 文件详情 包含隐藏文件  </span>\n<span class=\"hljs-built_in\">alias</span> la=<span class=\"hljs-string\">\"eza --icons --long --header --all\"</span>  \n<span class=\"hljs-comment\"># 显示文件详情并带git信息  </span>\n<span class=\"hljs-built_in\">alias</span> lg=<span class=\"hljs-string\">\"eza --icons --long --header --all --git\"</span>  \n<span class=\"hljs-comment\"># 关闭默认ls颜色  </span>\nDISABLE_LS_COLORS=<span class=\"hljs-literal\">true</span>  \n    \n<span class=\"hljs-comment\"># 快捷清屏  </span>\n<span class=\"hljs-built_in\">alias</span> cls=clear  \n  \n<span class=\"hljs-comment\"># volta 环境变量  </span>\n<span class=\"hljs-built_in\">export</span> VOLTA_HOME=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">$HOME</span>/.volta\"</span>  \n<span class=\"hljs-built_in\">export</span> PATH=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">$VOLTA_HOME</span>/bin:<span class=\"hljs-variable\">$PATH</span>\"</span>  \n  \n<span class=\"hljs-comment\"># bat 配置文件路径  </span>\n<span class=\"hljs-built_in\">export</span> BAT_CONFIG_PATH=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">$HOME</span>/.config/bat.conf\"</span>  \n  \n<span class=\"hljs-comment\"># ripgrep 配置文件路径  </span>\n<span class=\"hljs-built_in\">export</span> RIPGREP_CONFIG_PATH=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">$HOME</span>/.config/ripgrep.conf\"</span>  \n</code></pre>","heading":[{"text":"安装 <a href=\"https://brew.sh/\">Homebrew</a>","level":3,"id":"anchor-安装 <a href=\"https://brew.sh/\">Homebrew</a>"},{"text":"配置zsh（使用mac terminal）","level":3,"id":"anchor-配置zsh（使用mac terminal）"},{"text":"zsh插件管理 <a href=\"https://github.com/zdharma-continuum/zinit#manual\">zinit</a>","level":3,"id":"anchor-zsh插件管理 <a href=\"https://github.com/zdharma-continuum/zinit#manual\">zinit</a>","children":[{"text":"插件","level":5,"id":"anchor-插件"}]},{"text":"修改terminal主题配色","level":3,"id":"anchor-修改terminal主题配色"},{"text":"安装字体","level":3,"id":"anchor-安装字体"},{"text":"完整.zshrc","level":3,"id":"anchor-完整.zshrc"}],"tokens":[{"type":"hr","raw":"---  \n"},{"type":"space","raw":"  \n"},{"type":"heading","raw":"### 安装 [Homebrew](https://brew.sh/)  \n","depth":3,"text":"安装 [Homebrew](https://brew.sh/)","tokens":[{"type":"text","raw":"安装 ","text":"安装 "},{"type":"link","raw":"[Homebrew](https://brew.sh/)","href":"https://brew.sh/","title":null,"text":"Homebrew","tokens":[{"type":"text","raw":"Homebrew","text":"Homebrew"}]}]},{"type":"space","raw":"  \n"},{"type":"code","raw":"``` Bash  \n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"  \n```  ","lang":"Bash","text":"/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"  "},{"type":"space","raw":"\n  \n"},{"type":"heading","raw":"### 配置zsh（使用mac terminal）  \n","depth":3,"text":"配置zsh（使用mac terminal）","tokens":[{"type":"text","raw":"配置zsh（使用mac terminal）","text":"配置zsh（使用mac terminal）"}]},{"type":"space","raw":"  \n"},{"type":"code","raw":"``` Bash  \n# ~/.zshenv  \n// 将homebrew写入环境变量  \neval \"$(/usr/local/bin/brew shellenv)\"  \n  \n# 快捷的cd命令 启发与z autojump  \neval \"$(zoxide init zsh --cmd cd)\"  \n  \n```  ","lang":"Bash","text":"# ~/.zshenv  \n// 将homebrew写入环境变量  \neval \"$(/usr/local/bin/brew shellenv)\"  \n  \n# 快捷的cd命令 启发与z autojump  \neval \"$(zoxide init zsh --cmd cd)\"  \n  "},{"type":"space","raw":"\n  \n"},{"type":"paragraph","raw":"zsh常见配置文件  \n","text":"zsh常见配置文件  ","tokens":[{"type":"text","raw":"zsh常见配置文件  ","text":"zsh常见配置文件  "}]},{"type":"list","raw":"1. .zshenv 通常放环境变量 任何时候都会被加载  \n2. .zshrc 交互式终端可用","ordered":true,"start":1,"loose":false,"items":[{"type":"list_item","raw":"1. .zshenv 通常放环境变量 任何时候都会被加载  \n","task":false,"loose":false,"text":".zshenv 通常放环境变量 任何时候都会被加载  ","tokens":[{"type":"text","raw":".zshenv 通常放环境变量 任何时候都会被加载  ","text":".zshenv 通常放环境变量 任何时候都会被加载  ","tokens":[{"type":"text","raw":".zshenv 通常放环境变量 任何时候都会被加载  ","text":".zshenv 通常放环境变量 任何时候都会被加载  "}]}]},{"type":"list_item","raw":"2. .zshrc 交互式终端可用","task":false,"loose":false,"text":".zshrc 交互式终端可用","tokens":[{"type":"text","raw":".zshrc 交互式终端可用","text":".zshrc 交互式终端可用","tokens":[{"type":"text","raw":".zshrc 交互式终端可用","text":".zshrc 交互式终端可用"}]}]}]},{"type":"space","raw":"   \n  \n"},{"type":"paragraph","raw":"加载顺序：`.zshenv `-> `.zprofile` if login ->` .zshrc` if interactive -> `.zlogin` if login -> `.zlogout`  ","text":"加载顺序：`.zshenv `-> `.zprofile` if login ->` .zshrc` if interactive -> `.zlogin` if login -> `.zlogout`  ","tokens":[{"type":"text","raw":"加载顺序：","text":"加载顺序："},{"type":"codespan","raw":"`.zshenv `","text":".zshenv "},{"type":"text","raw":"-> ","text":"-&gt; "},{"type":"codespan","raw":"`.zprofile`","text":".zprofile"},{"type":"text","raw":" if login ->","text":" if login -&gt;"},{"type":"codespan","raw":"` .zshrc`","text":" .zshrc"},{"type":"text","raw":" if interactive -> ","text":" if interactive -&gt; "},{"type":"codespan","raw":"`.zlogin`","text":".zlogin"},{"type":"text","raw":" if login -> ","text":" if login -&gt; "},{"type":"codespan","raw":"`.zlogout`","text":".zlogout"},{"type":"text","raw":"  ","text":"  "}]},{"type":"space","raw":"\n    \n"},{"type":"heading","raw":"### zsh插件管理 [zinit](https://github.com/zdharma-continuum/zinit#manual)   \n","depth":3,"text":"zsh插件管理 [zinit](https://github.com/zdharma-continuum/zinit#manual)","tokens":[{"type":"text","raw":"zsh插件管理 ","text":"zsh插件管理 "},{"type":"link","raw":"[zinit](https://github.com/zdharma-continuum/zinit#manual)","href":"https://github.com/zdharma-continuum/zinit#manual","title":null,"text":"zinit","tokens":[{"type":"text","raw":"zinit","text":"zinit"}]}]},{"type":"space","raw":"   \n"},{"type":"code","raw":"``` Bash  \n brew install zinit  \n```  ","lang":"Bash","text":" brew install zinit  "},{"type":"space","raw":"\n  \n"},{"type":"code","raw":"``` Bash  \n# .zshrc file  \n### Added by Zinit's installer  \n  \nsource \"/usr/local/opt/zinit/zinit.zsh\"  \n  \nautoload -Uz _zinit  \n  \n(( ${+_comps} )) && _comps[zinit]=_zinit  \n  \n### End of Zinit's installer chunk  \n  \n# pure 主题  \n  \nzinit ice compile'(pure|async).zsh' pick'async.zsh' src'pure.zsh'  \n  \nzinit light sindresorhus/pure  \n  \n# 语法高亮  \n  \nzinit ice lucid wait='0' atinit='zpcompinit'  \n  \nzinit light zdharma-continuum/fast-syntax-highlighting  \n  \n...  \n```  ","lang":"Bash","text":"# .zshrc file  \n### Added by Zinit's installer  \n  \nsource \"/usr/local/opt/zinit/zinit.zsh\"  \n  \nautoload -Uz _zinit  \n  \n(( ${+_comps} )) && _comps[zinit]=_zinit  \n  \n### End of Zinit's installer chunk  \n  \n# pure 主题  \n  \nzinit ice compile'(pure|async).zsh' pick'async.zsh' src'pure.zsh'  \n  \nzinit light sindresorhus/pure  \n  \n# 语法高亮  \n  \nzinit ice lucid wait='0' atinit='zpcompinit'  \n  \nzinit light zdharma-continuum/fast-syntax-highlighting  \n  \n...  "},{"type":"space","raw":"\n  \n"},{"type":"paragraph","raw":"zinit 语法说明  \n","text":"zinit 语法说明  ","tokens":[{"type":"text","raw":"zinit 语法说明  ","text":"zinit 语法说明  "}]},{"type":"list","raw":"- `zinit light <repo/plugin>` 加载插件 不追踪插件行为  \n- `zinit load <repo/plugin>` 加载插件 可用unload卸载 追踪插件行为 查看报告 卸载  \n- `zinit snippet URL` 加载本地或远程文件  \n- `zinit self-update` 自更新  \n- `zinit update --parallel number`更新插件  \n- `zinit ice wait=\"0\"` 等待0s  **ice**选项 表示只使用一次 对下一条命令起作用 **pick** 正则匹配第一个符合条件的文件 **src** 指定source的文件 **atinit** 在加载插件时需要执行的命令","ordered":false,"start":"","loose":false,"items":[{"type":"list_item","raw":"- `zinit light <repo/plugin>` 加载插件 不追踪插件行为  \n","task":false,"loose":false,"text":"`zinit light <repo/plugin>` 加载插件 不追踪插件行为  ","tokens":[{"type":"text","raw":"`zinit light <repo/plugin>` 加载插件 不追踪插件行为  ","text":"`zinit light <repo/plugin>` 加载插件 不追踪插件行为  ","tokens":[{"type":"codespan","raw":"`zinit light <repo/plugin>`","text":"zinit light &lt;repo/plugin&gt;"},{"type":"text","raw":" 加载插件 不追踪插件行为  ","text":" 加载插件 不追踪插件行为  "}]}]},{"type":"list_item","raw":"- `zinit load <repo/plugin>` 加载插件 可用unload卸载 追踪插件行为 查看报告 卸载  \n","task":false,"loose":false,"text":"`zinit load <repo/plugin>` 加载插件 可用unload卸载 追踪插件行为 查看报告 卸载  ","tokens":[{"type":"text","raw":"`zinit load <repo/plugin>` 加载插件 可用unload卸载 追踪插件行为 查看报告 卸载  ","text":"`zinit load <repo/plugin>` 加载插件 可用unload卸载 追踪插件行为 查看报告 卸载  ","tokens":[{"type":"codespan","raw":"`zinit load <repo/plugin>`","text":"zinit load &lt;repo/plugin&gt;"},{"type":"text","raw":" 加载插件 可用unload卸载 追踪插件行为 查看报告 卸载  ","text":" 加载插件 可用unload卸载 追踪插件行为 查看报告 卸载  "}]}]},{"type":"list_item","raw":"- `zinit snippet URL` 加载本地或远程文件  \n","task":false,"loose":false,"text":"`zinit snippet URL` 加载本地或远程文件  ","tokens":[{"type":"text","raw":"`zinit snippet URL` 加载本地或远程文件  ","text":"`zinit snippet URL` 加载本地或远程文件  ","tokens":[{"type":"codespan","raw":"`zinit snippet URL`","text":"zinit snippet URL"},{"type":"text","raw":" 加载本地或远程文件  ","text":" 加载本地或远程文件  "}]}]},{"type":"list_item","raw":"- `zinit self-update` 自更新  \n","task":false,"loose":false,"text":"`zinit self-update` 自更新  ","tokens":[{"type":"text","raw":"`zinit self-update` 自更新  ","text":"`zinit self-update` 自更新  ","tokens":[{"type":"codespan","raw":"`zinit self-update`","text":"zinit self-update"},{"type":"text","raw":" 自更新  ","text":" 自更新  "}]}]},{"type":"list_item","raw":"- `zinit update --parallel number`更新插件  \n","task":false,"loose":false,"text":"`zinit update --parallel number`更新插件  ","tokens":[{"type":"text","raw":"`zinit update --parallel number`更新插件  ","text":"`zinit update --parallel number`更新插件  ","tokens":[{"type":"codespan","raw":"`zinit update --parallel number`","text":"zinit update --parallel number"},{"type":"text","raw":"更新插件  ","text":"更新插件  "}]}]},{"type":"list_item","raw":"- `zinit ice wait=\"0\"` 等待0s  **ice**选项 表示只使用一次 对下一条命令起作用 **pick** 正则匹配第一个符合条件的文件 **src** 指定source的文件 **atinit** 在加载插件时需要执行的命令","task":false,"loose":false,"text":"`zinit ice wait=\"0\"` 等待0s  **ice**选项 表示只使用一次 对下一条命令起作用 **pick** 正则匹配第一个符合条件的文件 **src** 指定source的文件 **atinit** 在加载插件时需要执行的命令","tokens":[{"type":"text","raw":"`zinit ice wait=\"0\"` 等待0s  **ice**选项 表示只使用一次 对下一条命令起作用 **pick** 正则匹配第一个符合条件的文件 **src** 指定source的文件 **atinit** 在加载插件时需要执行的命令","text":"`zinit ice wait=\"0\"` 等待0s  **ice**选项 表示只使用一次 对下一条命令起作用 **pick** 正则匹配第一个符合条件的文件 **src** 指定source的文件 **atinit** 在加载插件时需要执行的命令","tokens":[{"type":"codespan","raw":"`zinit ice wait=\"0\"`","text":"zinit ice wait=&quot;0&quot;"},{"type":"text","raw":" 等待0s  ","text":" 等待0s  "},{"type":"strong","raw":"**ice**","text":"ice","tokens":[{"type":"text","raw":"ice","text":"ice"}]},{"type":"text","raw":"选项 表示只使用一次 对下一条命令起作用 ","text":"选项 表示只使用一次 对下一条命令起作用 "},{"type":"strong","raw":"**pick**","text":"pick","tokens":[{"type":"text","raw":"pick","text":"pick"}]},{"type":"text","raw":" 正则匹配第一个符合条件的文件 ","text":" 正则匹配第一个符合条件的文件 "},{"type":"strong","raw":"**src**","text":"src","tokens":[{"type":"text","raw":"src","text":"src"}]},{"type":"text","raw":" 指定source的文件 ","text":" 指定source的文件 "},{"type":"strong","raw":"**atinit**","text":"atinit","tokens":[{"type":"text","raw":"atinit","text":"atinit"}]},{"type":"text","raw":" 在加载插件时需要执行的命令","text":" 在加载插件时需要执行的命令"}]}]}]},{"type":"space","raw":"  \n"},{"type":"heading","raw":"##### 插件  \n","depth":5,"text":"插件","tokens":[{"type":"text","raw":"插件","text":"插件"}]},{"type":"list","raw":"- [zdharma-continuum/fast-syntax-highlighting](https://github.com/zdharma-continuum/fast-syntax-highlighting) 语法高亮  \n- [ zdharma-continuum/history-search-multi-word](https://github.com/zdharma-continuum/history-search-multi-word) `ctrl+r` 选择输入匹配的语法  \n- [zsh-users/zsh-completions](https://github.com/zsh-users/zsh-completions) 补全 zsh 语法  \n- [zsh-users/zsh-autosuggestions](https://github.com/zsh-users/zsh-autosuggestions) 建议 提示之前的输入值  \n- [eza](https://github.com/eza-community/eza) 更好的ls 命令","ordered":false,"start":"","loose":false,"items":[{"type":"list_item","raw":"- [zdharma-continuum/fast-syntax-highlighting](https://github.com/zdharma-continuum/fast-syntax-highlighting) 语法高亮  \n","task":false,"loose":false,"text":"[zdharma-continuum/fast-syntax-highlighting](https://github.com/zdharma-continuum/fast-syntax-highlighting) 语法高亮  ","tokens":[{"type":"text","raw":"[zdharma-continuum/fast-syntax-highlighting](https://github.com/zdharma-continuum/fast-syntax-highlighting) 语法高亮  ","text":"[zdharma-continuum/fast-syntax-highlighting](https://github.com/zdharma-continuum/fast-syntax-highlighting) 语法高亮  ","tokens":[{"type":"link","raw":"[zdharma-continuum/fast-syntax-highlighting](https://github.com/zdharma-continuum/fast-syntax-highlighting)","href":"https://github.com/zdharma-continuum/fast-syntax-highlighting","title":null,"text":"zdharma-continuum/fast-syntax-highlighting","tokens":[{"type":"text","raw":"zdharma-continuum/fast-syntax-highlighting","text":"zdharma-continuum/fast-syntax-highlighting"}]},{"type":"text","raw":" 语法高亮  ","text":" 语法高亮  "}]}]},{"type":"list_item","raw":"- [ zdharma-continuum/history-search-multi-word](https://github.com/zdharma-continuum/history-search-multi-word) `ctrl+r` 选择输入匹配的语法  \n","task":false,"loose":false,"text":"[ zdharma-continuum/history-search-multi-word](https://github.com/zdharma-continuum/history-search-multi-word) `ctrl+r` 选择输入匹配的语法  ","tokens":[{"type":"text","raw":"[ zdharma-continuum/history-search-multi-word](https://github.com/zdharma-continuum/history-search-multi-word) `ctrl+r` 选择输入匹配的语法  ","text":"[ zdharma-continuum/history-search-multi-word](https://github.com/zdharma-continuum/history-search-multi-word) `ctrl+r` 选择输入匹配的语法  ","tokens":[{"type":"link","raw":"[ zdharma-continuum/history-search-multi-word](https://github.com/zdharma-continuum/history-search-multi-word)","href":"https://github.com/zdharma-continuum/history-search-multi-word","title":null,"text":" zdharma-continuum/history-search-multi-word","tokens":[{"type":"text","raw":" zdharma-continuum/history-search-multi-word","text":" zdharma-continuum/history-search-multi-word"}]},{"type":"text","raw":" ","text":" "},{"type":"codespan","raw":"`ctrl+r`","text":"ctrl+r"},{"type":"text","raw":" 选择输入匹配的语法  ","text":" 选择输入匹配的语法  "}]}]},{"type":"list_item","raw":"- [zsh-users/zsh-completions](https://github.com/zsh-users/zsh-completions) 补全 zsh 语法  \n","task":false,"loose":false,"text":"[zsh-users/zsh-completions](https://github.com/zsh-users/zsh-completions) 补全 zsh 语法  ","tokens":[{"type":"text","raw":"[zsh-users/zsh-completions](https://github.com/zsh-users/zsh-completions) 补全 zsh 语法  ","text":"[zsh-users/zsh-completions](https://github.com/zsh-users/zsh-completions) 补全 zsh 语法  ","tokens":[{"type":"link","raw":"[zsh-users/zsh-completions](https://github.com/zsh-users/zsh-completions)","href":"https://github.com/zsh-users/zsh-completions","title":null,"text":"zsh-users/zsh-completions","tokens":[{"type":"text","raw":"zsh-users/zsh-completions","text":"zsh-users/zsh-completions"}]},{"type":"text","raw":" 补全 zsh 语法  ","text":" 补全 zsh 语法  "}]}]},{"type":"list_item","raw":"- [zsh-users/zsh-autosuggestions](https://github.com/zsh-users/zsh-autosuggestions) 建议 提示之前的输入值  \n","task":false,"loose":false,"text":"[zsh-users/zsh-autosuggestions](https://github.com/zsh-users/zsh-autosuggestions) 建议 提示之前的输入值  ","tokens":[{"type":"text","raw":"[zsh-users/zsh-autosuggestions](https://github.com/zsh-users/zsh-autosuggestions) 建议 提示之前的输入值  ","text":"[zsh-users/zsh-autosuggestions](https://github.com/zsh-users/zsh-autosuggestions) 建议 提示之前的输入值  ","tokens":[{"type":"link","raw":"[zsh-users/zsh-autosuggestions](https://github.com/zsh-users/zsh-autosuggestions)","href":"https://github.com/zsh-users/zsh-autosuggestions","title":null,"text":"zsh-users/zsh-autosuggestions","tokens":[{"type":"text","raw":"zsh-users/zsh-autosuggestions","text":"zsh-users/zsh-autosuggestions"}]},{"type":"text","raw":" 建议 提示之前的输入值  ","text":" 建议 提示之前的输入值  "}]}]},{"type":"list_item","raw":"- [eza](https://github.com/eza-community/eza) 更好的ls 命令","task":false,"loose":false,"text":"[eza](https://github.com/eza-community/eza) 更好的ls 命令","tokens":[{"type":"text","raw":"[eza](https://github.com/eza-community/eza) 更好的ls 命令","text":"[eza](https://github.com/eza-community/eza) 更好的ls 命令","tokens":[{"type":"link","raw":"[eza](https://github.com/eza-community/eza)","href":"https://github.com/eza-community/eza","title":null,"text":"eza","tokens":[{"type":"text","raw":"eza","text":"eza"}]},{"type":"text","raw":" 更好的ls 命令","text":" 更好的ls 命令"}]}]}]},{"type":"space","raw":"  \n"},{"type":"code","raw":"``` Bash  \nbrew install eza  \n# ~/.zshrc  \n# eza 别名  \n  \n# 带图标  \n  \nalias ls=\"eza --icons\"  \n  \n# 文件详情  \n  \nalias ll=\"eza --icons --long --header\"  \n  \n# 文件详情 包含隐藏文件  \n  \nalias la=\"eza --icons --long --header --all\"  \n  \n# 显示文件详情并带git信息  \n  \nalias lg=\"eza --icons --long --header --all --git\"  \n  \n# 关闭默认ls颜色  \n  \nDISABLE_LS_COLORS=true   \n  \n```  \n","lang":"Bash","text":"brew install eza  \n# ~/.zshrc  \n# eza 别名  \n  \n# 带图标  \n  \nalias ls=\"eza --icons\"  \n  \n# 文件详情  \n  \nalias ll=\"eza --icons --long --header\"  \n  \n# 文件详情 包含隐藏文件  \n  \nalias la=\"eza --icons --long --header --all\"  \n  \n# 显示文件详情并带git信息  \n  \nalias lg=\"eza --icons --long --header --all --git\"  \n  \n# 关闭默认ls颜色  \n  \nDISABLE_LS_COLORS=true   \n  "},{"type":"list","raw":"- [bat](https://github.com/sharkdp/bat/blob/master/doc/README-zh.md) 类似cat 但有语法高亮","ordered":false,"start":"","loose":false,"items":[{"type":"list_item","raw":"- [bat](https://github.com/sharkdp/bat/blob/master/doc/README-zh.md) 类似cat 但有语法高亮","task":false,"loose":false,"text":"[bat](https://github.com/sharkdp/bat/blob/master/doc/README-zh.md) 类似cat 但有语法高亮","tokens":[{"type":"text","raw":"[bat](https://github.com/sharkdp/bat/blob/master/doc/README-zh.md) 类似cat 但有语法高亮","text":"[bat](https://github.com/sharkdp/bat/blob/master/doc/README-zh.md) 类似cat 但有语法高亮","tokens":[{"type":"link","raw":"[bat](https://github.com/sharkdp/bat/blob/master/doc/README-zh.md)","href":"https://github.com/sharkdp/bat/blob/master/doc/README-zh.md","title":null,"text":"bat","tokens":[{"type":"text","raw":"bat","text":"bat"}]},{"type":"text","raw":" 类似cat 但有语法高亮","text":" 类似cat 但有语法高亮"}]}]}]},{"type":"space","raw":"  \n"},{"type":"code","raw":"``` Bash  \nbrew install bat  \n  \n#命令  \nbat /example/z.js -r 16 #显示文件 从第16行显示  \n  \n# ~/.config/bat.conf  \n--paging=never #不分页  \n--theme=\"Solarized (dark)\" # 主题  \n  \n# `bat --list-themes` 一份语法高亮主题的清单  \n```  \n","lang":"Bash","text":"brew install bat  \n  \n#命令  \nbat /example/z.js -r 16 #显示文件 从第16行显示  \n  \n# ~/.config/bat.conf  \n--paging=never #不分页  \n--theme=\"Solarized (dark)\" # 主题  \n  \n# `bat --list-themes` 一份语法高亮主题的清单  "},{"type":"list","raw":"- [ripgrep](https://github.com/BurntSushi/ripgrep) 命令行搜索工具","ordered":false,"start":"","loose":false,"items":[{"type":"list_item","raw":"- [ripgrep](https://github.com/BurntSushi/ripgrep) 命令行搜索工具","task":false,"loose":false,"text":"[ripgrep](https://github.com/BurntSushi/ripgrep) 命令行搜索工具","tokens":[{"type":"text","raw":"[ripgrep](https://github.com/BurntSushi/ripgrep) 命令行搜索工具","text":"[ripgrep](https://github.com/BurntSushi/ripgrep) 命令行搜索工具","tokens":[{"type":"link","raw":"[ripgrep](https://github.com/BurntSushi/ripgrep)","href":"https://github.com/BurntSushi/ripgrep","title":null,"text":"ripgrep","tokens":[{"type":"text","raw":"ripgrep","text":"ripgrep"}]},{"type":"text","raw":" 命令行搜索工具","text":" 命令行搜索工具"}]}]}]},{"type":"space","raw":"  \n"},{"type":"code","raw":"``` Bash  \nbrew install ripgrep  \n  \n#命令  \nrg const demo.js # 在demo.js 搜索const关键字  \nrg const\\w+ demo.js # 正则匹配内容  \n  \n# ~/.config/ripgrep.conf  \n #Don't let ripgrep vomit really long lines to my terminal, and show a preview.  \n--max-columns=150  \n--max-columns-preview   \n  \n# Add my 'web' type.  \n--type-add  \nweb:*.{html,css,js}*   \n  \n# Search hidden files / directories (e.g. dotfiles) by default  \n--hidden    \n  \n# Using glob patterns to include/exclude files or folders  \n--glob=!.git/*  \n  \n# or  \n--glob  \n!.git/*   \n  \n# Set the colors.  \n--colors=line:none  \n--colors=line:style:bold  \n  \n# Because who cares about case!?  \n--smart-case  \n```  ","lang":"Bash","text":"brew install ripgrep  \n  \n#命令  \nrg const demo.js # 在demo.js 搜索const关键字  \nrg const\\w+ demo.js # 正则匹配内容  \n  \n# ~/.config/ripgrep.conf  \n #Don't let ripgrep vomit really long lines to my terminal, and show a preview.  \n--max-columns=150  \n--max-columns-preview   \n  \n# Add my 'web' type.  \n--type-add  \nweb:*.{html,css,js}*   \n  \n# Search hidden files / directories (e.g. dotfiles) by default  \n--hidden    \n  \n# Using glob patterns to include/exclude files or folders  \n--glob=!.git/*  \n  \n# or  \n--glob  \n!.git/*   \n  \n# Set the colors.  \n--colors=line:none  \n--colors=line:style:bold  \n  \n# Because who cares about case!?  \n--smart-case  "},{"type":"space","raw":"\n  \n"},{"type":"heading","raw":"### 修改terminal主题配色  \n","depth":3,"text":"修改terminal主题配色","tokens":[{"type":"text","raw":"修改terminal主题配色","text":"修改terminal主题配色"}]},{"type":"list","raw":"1. 左上角终端选偏好设置  \n2. 点击描述文件  \n3. [themes](https://github.com/lysyi3m/macos-terminal-themes)下载主题  \n4. 导入下载的主题  \n5. 点击使用主题","ordered":true,"start":1,"loose":false,"items":[{"type":"list_item","raw":"1. 左上角终端选偏好设置  \n","task":false,"loose":false,"text":"左上角终端选偏好设置  ","tokens":[{"type":"text","raw":"左上角终端选偏好设置  ","text":"左上角终端选偏好设置  ","tokens":[{"type":"text","raw":"左上角终端选偏好设置  ","text":"左上角终端选偏好设置  "}]}]},{"type":"list_item","raw":"2. 点击描述文件  \n","task":false,"loose":false,"text":"点击描述文件  ","tokens":[{"type":"text","raw":"点击描述文件  ","text":"点击描述文件  ","tokens":[{"type":"text","raw":"点击描述文件  ","text":"点击描述文件  "}]}]},{"type":"list_item","raw":"3. [themes](https://github.com/lysyi3m/macos-terminal-themes)下载主题  \n","task":false,"loose":false,"text":"[themes](https://github.com/lysyi3m/macos-terminal-themes)下载主题  ","tokens":[{"type":"text","raw":"[themes](https://github.com/lysyi3m/macos-terminal-themes)下载主题  ","text":"[themes](https://github.com/lysyi3m/macos-terminal-themes)下载主题  ","tokens":[{"type":"link","raw":"[themes](https://github.com/lysyi3m/macos-terminal-themes)","href":"https://github.com/lysyi3m/macos-terminal-themes","title":null,"text":"themes","tokens":[{"type":"text","raw":"themes","text":"themes"}]},{"type":"text","raw":"下载主题  ","text":"下载主题  "}]}]},{"type":"list_item","raw":"4. 导入下载的主题  \n","task":false,"loose":false,"text":"导入下载的主题  ","tokens":[{"type":"text","raw":"导入下载的主题  ","text":"导入下载的主题  ","tokens":[{"type":"text","raw":"导入下载的主题  ","text":"导入下载的主题  "}]}]},{"type":"list_item","raw":"5. 点击使用主题","task":false,"loose":false,"text":"点击使用主题","tokens":[{"type":"text","raw":"点击使用主题","text":"点击使用主题","tokens":[{"type":"text","raw":"点击使用主题","text":"点击使用主题"}]}]}]},{"type":"space","raw":"  \n  \n"},{"type":"heading","raw":"### 安装字体  \n","depth":3,"text":"安装字体","tokens":[{"type":"text","raw":"安装字体","text":"安装字体"}]},{"type":"code","raw":"``` Bash  \nbrew tap homebrew/cask-fonts  \nbrew install font-hack-nerd-font  \n```  \n","lang":"Bash","text":"brew tap homebrew/cask-fonts  \nbrew install font-hack-nerd-font  "},{"type":"list","raw":"- terminal 描述文件 文本处切换字体   \n- vscode fontfamily 配置 字体 'Hack Nerd Font Mono' （terminal设置字体同理）","ordered":false,"start":"","loose":false,"items":[{"type":"list_item","raw":"- terminal 描述文件 文本处切换字体   \n","task":false,"loose":false,"text":"terminal 描述文件 文本处切换字体   ","tokens":[{"type":"text","raw":"terminal 描述文件 文本处切换字体   ","text":"terminal 描述文件 文本处切换字体   ","tokens":[{"type":"text","raw":"terminal 描述文件 文本处切换字体   ","text":"terminal 描述文件 文本处切换字体   "}]}]},{"type":"list_item","raw":"- vscode fontfamily 配置 字体 'Hack Nerd Font Mono' （terminal设置字体同理）","task":false,"loose":false,"text":"vscode fontfamily 配置 字体 'Hack Nerd Font Mono' （terminal设置字体同理）","tokens":[{"type":"text","raw":"vscode fontfamily 配置 字体 'Hack Nerd Font Mono' （terminal设置字体同理）","text":"vscode fontfamily 配置 字体 'Hack Nerd Font Mono' （terminal设置字体同理）","tokens":[{"type":"text","raw":"vscode fontfamily 配置 字体 'Hack Nerd Font Mono' （terminal设置字体同理）","text":"vscode fontfamily 配置 字体 &#39;Hack Nerd Font Mono&#39; （terminal设置字体同理）"}]}]}]},{"type":"space","raw":"  \n"},{"type":"heading","raw":"### 完整.zshrc  \n","depth":3,"text":"完整.zshrc","tokens":[{"type":"text","raw":"完整.zshrc","text":"完整.zshrc"}]},{"type":"code","raw":"``` Bash  \n### Added by Zinit's installer  \nsource \"/usr/local/opt/zinit/zinit.zsh\"  \nautoload -Uz _zinit  \n(( ${+_comps} )) && _comps[zinit]=_zinit  \n### End of Zinit's installer chunk  \n  \n# pure 主题  \nzinit ice compile'(pure|async).zsh' pick'async.zsh' src'pure.zsh'  \nzinit light sindresorhus/pure  \n  \n# 语法高亮  \nzinit ice lucid wait='0' atinit='zpcompinit'  \nzinit light zdharma-continuum/fast-syntax-highlighting  \n  \n# 搜索历史输入  \nzinit ice lucid wait='0'  \nzinit light zdharma-continuum/history-search-multi-word  \n  \n# 补全  \nzinit ice lucid wait='0'  \nzinit light zsh-users/zsh-completions  \n  \n# 自动建议  \nzinit ice wait lucid atload'_zsh_autosuggest_start'  \nzinit light zsh-users/zsh-autosuggestions  \n  \n# 加载 OMZ 框架及部分插件  \nzinit snippet OMZ::lib/completion.zsh  \nzinit snippet OMZ::lib/history.zsh  \nzinit snippet OMZ::lib/key-bindings.zsh  \nzinit snippet OMZ::lib/theme-and-appearance.zsh  \nzinit snippet OMZ::plugins/colored-man-pages/colored-man-pages.plugin.zsh  \nzinit snippet OMZ::plugins/sudo/sudo.plugin.zsh  \nzinit snippet OMZ::plugins/extract  \n    \nzinit ice lucid wait='1'  \nzinit snippet OMZ::plugins/git/git.plugin.zsh  \n  \n# alias 代理命令  \nalias proxy=\"export http_proxy=http://127.0.0.1:1087;export https_proxy=http://127.0.0.1:1087;export ALL_PROXY=socks5://127.0.0.1:1080\"  \nalias unproxy=\"unset https_proxy http_proxy all_proxy\"  \n  \n# eza 别名  \n# 带图标  \nalias ls=\"eza --icons\"  \n# 文件详情  \nalias ll=\"eza --icons --long --header\"  \n# 文件详情 包含隐藏文件  \nalias la=\"eza --icons --long --header --all\"  \n# 显示文件详情并带git信息  \nalias lg=\"eza --icons --long --header --all --git\"  \n# 关闭默认ls颜色  \nDISABLE_LS_COLORS=true  \n    \n# 快捷清屏  \nalias cls=clear  \n  \n# volta 环境变量  \nexport VOLTA_HOME=\"$HOME/.volta\"  \nexport PATH=\"$VOLTA_HOME/bin:$PATH\"  \n  \n# bat 配置文件路径  \nexport BAT_CONFIG_PATH=\"$HOME/.config/bat.conf\"  \n  \n# ripgrep 配置文件路径  \nexport RIPGREP_CONFIG_PATH=\"$HOME/.config/ripgrep.conf\"  \n```","lang":"Bash","text":"### Added by Zinit's installer  \nsource \"/usr/local/opt/zinit/zinit.zsh\"  \nautoload -Uz _zinit  \n(( ${+_comps} )) && _comps[zinit]=_zinit  \n### End of Zinit's installer chunk  \n  \n# pure 主题  \nzinit ice compile'(pure|async).zsh' pick'async.zsh' src'pure.zsh'  \nzinit light sindresorhus/pure  \n  \n# 语法高亮  \nzinit ice lucid wait='0' atinit='zpcompinit'  \nzinit light zdharma-continuum/fast-syntax-highlighting  \n  \n# 搜索历史输入  \nzinit ice lucid wait='0'  \nzinit light zdharma-continuum/history-search-multi-word  \n  \n# 补全  \nzinit ice lucid wait='0'  \nzinit light zsh-users/zsh-completions  \n  \n# 自动建议  \nzinit ice wait lucid atload'_zsh_autosuggest_start'  \nzinit light zsh-users/zsh-autosuggestions  \n  \n# 加载 OMZ 框架及部分插件  \nzinit snippet OMZ::lib/completion.zsh  \nzinit snippet OMZ::lib/history.zsh  \nzinit snippet OMZ::lib/key-bindings.zsh  \nzinit snippet OMZ::lib/theme-and-appearance.zsh  \nzinit snippet OMZ::plugins/colored-man-pages/colored-man-pages.plugin.zsh  \nzinit snippet OMZ::plugins/sudo/sudo.plugin.zsh  \nzinit snippet OMZ::plugins/extract  \n    \nzinit ice lucid wait='1'  \nzinit snippet OMZ::plugins/git/git.plugin.zsh  \n  \n# alias 代理命令  \nalias proxy=\"export http_proxy=http://127.0.0.1:1087;export https_proxy=http://127.0.0.1:1087;export ALL_PROXY=socks5://127.0.0.1:1080\"  \nalias unproxy=\"unset https_proxy http_proxy all_proxy\"  \n  \n# eza 别名  \n# 带图标  \nalias ls=\"eza --icons\"  \n# 文件详情  \nalias ll=\"eza --icons --long --header\"  \n# 文件详情 包含隐藏文件  \nalias la=\"eza --icons --long --header --all\"  \n# 显示文件详情并带git信息  \nalias lg=\"eza --icons --long --header --all --git\"  \n# 关闭默认ls颜色  \nDISABLE_LS_COLORS=true  \n    \n# 快捷清屏  \nalias cls=clear  \n  \n# volta 环境变量  \nexport VOLTA_HOME=\"$HOME/.volta\"  \nexport PATH=\"$VOLTA_HOME/bin:$PATH\"  \n  \n# bat 配置文件路径  \nexport BAT_CONFIG_PATH=\"$HOME/.config/bat.conf\"  \n  \n# ripgrep 配置文件路径  \nexport RIPGREP_CONFIG_PATH=\"$HOME/.config/ripgrep.conf\"  "}],"tags":["computer"],"date":"2023-12-16","series":"Mac装机","title":"装机指南 - Terminal zsh 配置","slug":"mac-terminal","keywords":"mac装机","description":"mac装机，terminal，zsh，volta","lastmod":"","share":"true"}