{"html":"<hr>\n<h5>安装 <a href=\"https://brew.sh/\">Homebrew</a></h5>\n<pre><code class=\"language-shell\">/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;  \n</code></pre>\n<h5>配置zsh（使用mac terminal）</h5>\n<pre><code class=\"language-shell\"># ~/.zshenv  \n// 将homebrew写入环境变量  \neval &quot;$(/usr/local/bin/brew shellenv)&quot;  \n  \n# 快捷的cd命令 启发与z autojump  \neval &quot;$(zoxide init zsh --cmd cd)&quot;  \n  \n</code></pre>\n<p>zsh常见配置文件  </p>\n<ol>\n<li>.zshenv 通常放环境变量 任何时候都会被加载  </li>\n<li>.zshrc 交互式终端可用<br>加载顺序：<code>.zshenv </code>-&gt; <code>.zprofile</code> if login -&gt;<code> .zshrc</code> if interactive -&gt; <code>.zlogin</code> if login -&gt; <code>.zlogout</code></li>\n</ol>\n<h5>zsh插件管理 <a href=\"https://github.com/zdharma-continuum/zinit#manual\">zinit</a></h5>\n<pre><code class=\"language-shell\"> brew install zinit  \n</code></pre>\n<pre><code class=\"language-shell\"># .zshrc file  \n### Added by Zinit&#39;s installer  \n  \nsource &quot;/usr/local/opt/zinit/zinit.zsh&quot;  \n  \nautoload -Uz _zinit  \n  \n(( ${+_comps} )) &amp;&amp; _comps[zinit]=_zinit  \n  \n### End of Zinit&#39;s installer chunk  \n  \n# pure 主题  \n  \nzinit ice compile&#39;(pure|async).zsh&#39; pick&#39;async.zsh&#39; src&#39;pure.zsh&#39;  \n  \nzinit light sindresorhus/pure  \n  \n# 语法高亮  \n  \nzinit ice lucid wait=&#39;0&#39; atinit=&#39;zpcompinit&#39;  \n  \nzinit light zdharma-continuum/fast-syntax-highlighting  \n  \n...  \n</code></pre>\n<p>zinit 语法说明  </p>\n<ul>\n<li><code>zinit light &lt;repo/plugin&gt;</code> 加载插件 不追踪插件行为  </li>\n<li><code>zinit load &lt;repo/plugin&gt;</code> 加载插件 可用unload卸载 追踪插件行为 查看报告 卸载  </li>\n<li><code>zinit snippet URL</code> 加载本地或远程文件  </li>\n<li><code>zinit self-update</code> 自更新  </li>\n<li><code>zinit update --parallel number</code>更新插件  </li>\n<li><code>zinit ice wait=&quot;0&quot;</code> 等待0s  <strong>ice</strong>选项 表示只使用一次 对下一条命令起作用 <strong>pick</strong> 正则匹配第一个符合条件的文件 <strong>src</strong> 指定source的文件 <strong>atinit</strong> 在加载插件时需要执行的命令</li>\n</ul>\n<h5>插件</h5>\n<ul>\n<li><a href=\"https://github.com/zdharma-continuum/fast-syntax-highlighting\">zdharma-continuum/fast-syntax-highlighting</a> 语法高亮  </li>\n<li><a href=\"https://github.com/zdharma-continuum/history-search-multi-word\"> zdharma-continuum/history-search-multi-word</a> <code>ctrl+r</code> 选择输入匹配的语法  </li>\n<li><a href=\"https://github.com/zsh-users/zsh-completions\">zsh-users/zsh-completions</a> 补全 zsh 语法  </li>\n<li><a href=\"https://github.com/zsh-users/zsh-autosuggestions\">zsh-users/zsh-autosuggestions</a> 建议 提示之前的输入值  </li>\n<li><a href=\"https://github.com/eza-community/eza\">eza</a> 更好的ls 命令</li>\n</ul>\n<pre><code class=\"language-shell\">brew install eza  \n# ~/.zshrc  \n# eza 别名  \n  \n# 带图标  \n  \nalias ls=&quot;eza --icons&quot;  \n  \n# 文件详情  \n  \nalias ll=&quot;eza --icons --long --header&quot;  \n  \n# 文件详情 包含隐藏文件  \n  \nalias la=&quot;eza --icons --long --header --all&quot;  \n  \n# 显示文件详情并带git信息  \n  \nalias lg=&quot;eza --icons --long --header --all --git&quot;  \n  \n# 关闭默认ls颜色  \n  \nDISABLE_LS_COLORS=true   \n  \n</code></pre>\n<ul>\n<li><a href=\"https://github.com/sharkdp/bat/blob/master/doc/README-zh.md\">bat</a> 类似cat 但有语法高亮</li>\n</ul>\n<pre><code class=\"language-shell\">brew install bat  \n  \n#命令  \nbat /example/z.js -r 16 #显示文件 从第16行显示  \n  \n# ~/.config/bat.conf  \n--paging=never #不分页  \n--theme=&quot;Solarized (dark)&quot; # 主题  \n  \n# `bat --list-themes` 一份语法高亮主题的清单  \n</code></pre>\n<ul>\n<li><a href=\"https://github.com/BurntSushi/ripgrep\">ripgrep</a> 命令行搜索工具</li>\n</ul>\n<pre><code class=\"language-shell\">brew install ripgrep  \n  \n#命令  \nrg const demo.js # 在demo.js 搜索const关键字  \nrg const\\w+ demo.js # 正则匹配内容  \n  \n# ~/.config/ripgrep.conf  \n #Don&#39;t let ripgrep vomit really long lines to my terminal, and show a preview.  \n--max-columns=150  \n--max-columns-preview   \n  \n# Add my &#39;web&#39; type.  \n--type-add  \nweb:*.{html,css,js}*   \n  \n# Search hidden files / directories (e.g. dotfiles) by default  \n--hidden    \n  \n# Using glob patterns to include/exclude files or folders  \n--glob=!.git/*  \n  \n# or  \n--glob  \n!.git/*   \n  \n# Set the colors.  \n--colors=line:none  \n--colors=line:style:bold  \n  \n# Because who cares about case!?  \n--smart-case  \n</code></pre>\n<h5>修改terminal主题配色</h5>\n<ol>\n<li>左上角终端选偏好设置  </li>\n<li>点击描述文件  </li>\n<li><a href=\"https://github.com/lysyi3m/macos-terminal-themes\">themes</a>下载主题  </li>\n<li>导入下载的主题  </li>\n<li>点击使用主题</li>\n</ol>\n<h5>安装字体</h5>\n<pre><code class=\"language-shell\">brew tap homebrew/cask-fonts  \nbrew install font-hack-nerd-font  \n</code></pre>\n<ul>\n<li>terminal 描述文件 文本处切换字体   </li>\n<li>vscode fontfamily 配置 字体 &#39;Hack Nerd Font Mono&#39; （terminal设置字体同理）</li>\n</ul>\n<h5>完整.zshrc</h5>\n<pre><code class=\"language-shell\">### Added by Zinit&#39;s installer  \nsource &quot;/usr/local/opt/zinit/zinit.zsh&quot;  \nautoload -Uz _zinit  \n(( ${+_comps} )) &amp;&amp; _comps[zinit]=_zinit  \n### End of Zinit&#39;s installer chunk  \n  \n# pure 主题  \nzinit ice compile&#39;(pure|async).zsh&#39; pick&#39;async.zsh&#39; src&#39;pure.zsh&#39;  \nzinit light sindresorhus/pure  \n  \n# 语法高亮  \nzinit ice lucid wait=&#39;0&#39; atinit=&#39;zpcompinit&#39;  \nzinit light zdharma-continuum/fast-syntax-highlighting  \n  \n# 搜索历史输入  \nzinit ice lucid wait=&#39;0&#39;  \nzinit light zdharma-continuum/history-search-multi-word  \n  \n# 补全  \nzinit ice lucid wait=&#39;0&#39;  \nzinit light zsh-users/zsh-completions  \n  \n# 自动建议  \nzinit ice wait lucid atload&#39;_zsh_autosuggest_start&#39;  \nzinit light zsh-users/zsh-autosuggestions  \n  \n# 加载 OMZ 框架及部分插件  \nzinit snippet OMZ::lib/completion.zsh  \nzinit snippet OMZ::lib/history.zsh  \nzinit snippet OMZ::lib/key-bindings.zsh  \nzinit snippet OMZ::lib/theme-and-appearance.zsh  \nzinit snippet OMZ::plugins/colored-man-pages/colored-man-pages.plugin.zsh  \nzinit snippet OMZ::plugins/sudo/sudo.plugin.zsh  \nzinit snippet OMZ::plugins/extract  \n    \nzinit ice lucid wait=&#39;1&#39;  \nzinit snippet OMZ::plugins/git/git.plugin.zsh  \n  \n# alias 代理命令  \nalias proxy=&quot;export http_proxy=http://127.0.0.1:1087;export https_proxy=http://127.0.0.1:1087;export ALL_PROXY=socks5://127.0.0.1:1080&quot;  \nalias unproxy=&quot;unset https_proxy http_proxy all_proxy&quot;  \n  \n# eza 别名  \n# 带图标  \nalias ls=&quot;eza --icons&quot;  \n# 文件详情  \nalias ll=&quot;eza --icons --long --header&quot;  \n# 文件详情 包含隐藏文件  \nalias la=&quot;eza --icons --long --header --all&quot;  \n# 显示文件详情并带git信息  \nalias lg=&quot;eza --icons --long --header --all --git&quot;  \n# 关闭默认ls颜色  \nDISABLE_LS_COLORS=true  \n    \n# 快捷清屏  \nalias cls=clear  \n  \n# volta 环境变量  \nexport VOLTA_HOME=&quot;$HOME/.volta&quot;  \nexport PATH=&quot;$VOLTA_HOME/bin:$PATH&quot;  \n  \n# bat 配置文件路径  \nexport BAT_CONFIG_PATH=&quot;$HOME/.config/bat.conf&quot;  \n  \n# ripgrep 配置文件路径  \nexport RIPGREP_CONFIG_PATH=&quot;$HOME/.config/ripgrep.conf&quot;  \n</code></pre>\n","tags":["computer"],"date":"2024-12-16","series":"Mac装机","title":"装机指南 - Terminal zsh 配置","slug":"mac-terminal","keywords":"mac装机","description":"mac装机，terminal，zsh，volta","lastmod":"","share":"true"}